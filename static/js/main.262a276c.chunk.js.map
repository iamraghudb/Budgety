{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","description","amount","transaction","setTransaction","JSON","parse","localStorage","getItem","list","setList","balance","setBalance","credit","setCredit","debit","setDebit","updateForm","e","target","name","type","parseInt","value","useEffect","money","map","i","reduce","acc","item","toFixed","getBalance","setItem","stringify","className","onSubmit","preventDefault","alert","placeholder","onChange","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAqHeA,MAlHf,WAAgB,IAAD,EACyBC,mBAAS,CAC7CC,YAAa,GACbC,OAAQ,KAHG,mBACNC,EADM,KACOC,EADP,OAKWJ,mBACtBK,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IANjC,mBAKNC,EALM,KAKAC,EALA,OAQiBV,mBAAS,IAR1B,mBAQNW,EARM,KAQGC,EARH,OASeZ,mBAC1BK,KAAKC,MAAMC,aAAaC,QAAQ,YAVrB,mBASNK,EATM,KASEC,EATF,OAYad,mBAASK,KAAKC,MAAMC,aAAaC,QAAQ,WAZtD,mBAYNO,EAZM,KAYCC,EAZD,KAcPC,EAAa,SAACC,GAClBd,EAAe,2BACVD,GADS,kBAEXe,EAAEC,OAAOC,KACU,WAAlBF,EAAEC,OAAOE,KAAoBC,SAASJ,EAAEC,OAAOI,OAASL,EAAEC,OAAOI,UA6BvE,OAnBAC,qBAAU,YANS,WACjB,IACMC,EADUhB,EAAKiB,KAAI,SAACC,GAAD,OAAOA,EAAEzB,UACZ0B,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GACtEnB,EAAWa,GAIXO,GACAzB,aAAa0B,QAAQ,OAAQ5B,KAAK6B,UAAUzB,IAC5CF,aAAa0B,QAAQ,SAAU5B,KAAK6B,UAAUrB,IAC9CN,aAAa0B,QAAQ,QAAS5B,KAAK6B,UAAUnB,MAC5C,CAACN,IAeF,gCACE,oBAAI0B,UAAU,QAAd,qBACA,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,WAAd,2BACA,uBACEC,SAAU,SAAClB,GAAO,IACRjB,EAAwBE,EAAxBF,YAAaC,EAAWC,EAAXD,OAChBD,GAAgBC,GAInBgB,EAAEmB,iBACF3B,EAAQ,CAACP,GAAF,mBAAkBM,KAzBrCN,EAAYD,OAAS,EACjBY,EAAUD,EAASV,EAAYD,QAC/Bc,EAASD,EAAQZ,EAAYD,QAyBrBE,EAAe,CAAEH,YAAa,GAAIC,OAAQ,OAN1CoC,MAAM,sBACNpB,EAAEmB,mBALR,UAcE,8BACE,uBACEhB,KAAK,OACLc,UAAU,QACVI,YAAY,oBACZhB,MAAOpB,EAAYF,YACnBmB,KAAK,cACLoB,SAAUvB,MAGd,uBACEI,KAAK,SACLc,UAAU,QACVI,YAAY,eACZnB,KAAK,SACLG,MAAOpB,EAAYD,OACnBsC,SAAUvB,IAEZ,8BACE,wBAAQI,KAAK,SAASc,UAAU,oBAAhC,yBAKJ,8BACE,wBAAQA,UAAU,mBAAmBM,QAnD3B,WAClB/B,EAAQ,IACRI,EAAU,MACVE,EAAS,OAgDD,iCAMN,sBAAKmB,UAAU,SAAf,UACE,oBAAIA,UAAU,WAAd,8BACA,wCAAMxB,KACN,gCACE,oBAAIwB,UAAU,WAAd,oBACA,wCAAMtB,QAER,gCACE,oBAAIsB,UAAU,WAAd,mBACA,wCAAMpB,eClGD2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.262a276c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [transaction, setTransaction] = useState({\n    description: \"\",\n    amount: \"\",\n  });\n  const [list, setList] = useState(\n    JSON.parse(localStorage.getItem(\"list\")) || []\n  );\n  const [balance, setBalance] = useState(\"\");\n  const [credit, setCredit] = useState(\n    JSON.parse(localStorage.getItem(\"credit\"))\n  );\n  const [debit, setDebit] = useState(JSON.parse(localStorage.getItem(\"debit\")));\n\n  const updateForm = (e) => {\n    setTransaction({\n      ...transaction,\n      [e.target.name]:\n        e.target.type === \"number\" ? parseInt(e.target.value) : e.target.value,\n    });\n  };\n\n  const getBalance = () => {\n    const amounts = list.map((i) => i.amount);\n    const money = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n    setBalance(money);\n  };\n\n  useEffect(() => {\n    getBalance();\n    localStorage.setItem(\"list\", JSON.stringify(list));\n    localStorage.setItem(\"credit\", JSON.stringify(credit));\n    localStorage.setItem(\"debit\", JSON.stringify(debit));\n  }, [list]);\n\n  const plusMinus = () => {\n    transaction.amount > 0\n      ? setCredit(credit + transaction.amount)\n      : setDebit(debit + transaction.amount);\n  };\n\n  const clearBudget = () => {\n    setList([]);\n    setCredit(null);\n    setDebit(null);\n  };\n\n  return (\n    <div>\n      <h1 className=\"title\">Budgety</h1>\n      <div className=\"container layout\">\n        <div className=\"form\">\n          <h2 className=\"subtitle\">Enter an Item</h2>\n          <form\n            onSubmit={(e) => {\n              const { description, amount } = transaction;\n              if (!description && !amount) {\n                alert(\"Enter Valid things\");\n                e.preventDefault();\n              } else {\n                e.preventDefault();\n                setList([transaction, ...list]);\n                plusMinus();\n                setTransaction({ description: \"\", amount: \"\" });\n              }\n            }}\n          >\n            <div>\n              <input\n                type=\"text\"\n                className=\"input\"\n                placeholder=\"Enter Transaction\"\n                value={transaction.description}\n                name=\"description\"\n                onChange={updateForm}\n              />\n            </div>\n            <input\n              type=\"number\"\n              className=\"input\"\n              placeholder=\"Enter Amonut\"\n              name=\"amount\"\n              value={transaction.amount}\n              onChange={updateForm}\n            />\n            <div>\n              <button type=\"submit\" className=\"button is-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n          <div>\n            <button className=\"button is-danger\" onClick={clearBudget}>\n              Clear Budget\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"totals\">\n        <h2 className=\"subtitle\">Current Balance:</h2>\n        <h4>₹{balance}</h4>\n        <div>\n          <h3 className=\"subtitle\">Credit</h3>\n          <h4>₹{credit}</h4>\n        </div>\n        <div>\n          <h3 className=\"subtitle\">Debit</h3>\n          <h4>₹{debit}</h4>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}